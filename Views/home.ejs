
<html>
<head>
	<title>Cool</title>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<script src="jquery/dist/jquery.min.js"></script>
	<script src="popper.js/dist/umd/popper.min.js"></script>
	<script src="bootstrap/dist/js/bootstrap.bundle.min.js"></script>
	<script src="webrtc-adapter/out/adapter.js"></script>
	<script src="moment/moment.js"></script>
	<script src="jquery-resizable-dom/dist/jquery-resizable.min.js"></script>
	<link rel="stylesheet" href="bootstrap/dist/css/bootstrap.min.css">
	<link rel="stylesheet" href="font-awesome/css/font-awesome.min.css">
	<link rel="stylesheet" href="three-dots/dist/three-dots.min.css">
	<script src="https://cdn.jsdelivr.net/npm/peerjs@0.3.24/dist/peerjs.min.js"></script>
	<!--<script src="peerjs/dist/peerjs.min.js"></script>-->
	<!--<script src="https://cdn.jsdelivr.net/npm/peerjs@0.3.20/dist/peer.min.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/peerjs@1.0.0/dist/peerjs.min.js"></script>
	<script src="scripts/peerjs.min.js"></script>-->
	<script src="autosize/dist/autosize.min.js"></script>
	<script src="ace/ace.js" type="text/javascript" charset="utf-8"></script>
	<script src="ace/ext-language_tools.js"></script>
	<% if (type) { %>
		<script src="video-stream-merger/dist/video-stream-merger.js"></script>
	<% } %>	
</head>

<style>
.custom-control-label::before, .custom-file-label, .custom-select{
	background-color: #007bff;
}
#my-camera
{
    transform: rotateY(180deg);
    -webkit-transform:rotateY(180deg); /* Safari and Chrome */
    -moz-transform:rotateY(180deg); /* Firefox */
}
#peer-camera
{
    transform: rotateY(180deg);
    -webkit-transform:rotateY(180deg); /* Safari and Chrome */
    -moz-transform:rotateY(180deg); /* Firefox */
}
#notifications {
    cursor: pointer;
    position: fixed;
    top: 0px;
    z-index: 9999;
    margin-bottom: 22px;
    margin-right: 15px;
    //max-width: 300px;   
}
#container{
	height:100%;
	width:auto;
	white-space:nowrap;
	overflow:hidden;
	position:relative;
	}
#editor{
	flex: 0 0 auto;
	height: 80vh;
	min-height: 20vh;
	max-height: 80vh;
	width: 100%;
	//overflow:auto;
	//resize:vertical;
	//display: inline-block;
	}
#output{
	flex: 1 1 auto;
	width: 100%;
	height: 10vh;
	min-height: 10vh;
	max-height: 70vh;
	resize: none;
	background: #272822;
    color: red;
	border: none;
	}
#input{
	height: 30%;
	min-height: 30vh;
	resize: none;
	}
.MyCursorClass {
    position: absolute;
    border-left: solid gold;
}
.splitter-horizontal {
  flex: 0 0 auto;
  height: 18px;
  background: url(https://raw.githubusercontent.com/RickStrahl/jquery-resizable/master/assets/hsizegrip.png) center center no-repeat #535353;
  cursor: row-resize;
}
  .chat-main{
	position: fixed;
	width: 260px;
	bottom: 0;
	right: 0px;
}
.header-one{
	background: #404040;
}
.name h6{
	display: inline-block;
	font-size: 14px;
}
.options i,.options .arrow-up{
	height: 25px;
	width: 25px;
}
.options i{
	color: #B2B2B2;
	font-size: 16px;
	cursor: pointer;
}
.options .hover:hover, .options .arrow-up:hover{
	background: #737373;
}
.options .arrow-up{
    display: inline-block;
    line-height: 0;
}
.options .hover:hover, .options .arrow-up:hover .fa-arrow-up{
	color: #fff;
}
.options .fa-arrow-up{
	transform: rotate(40deg);
}
.header-two{
	border-top: 2px solid #35AC19;
	background: #ECEFF1;
	color: #5E6060;
	padding: 8px 0px 4px 8px;
	box-shadow: 0px 6px 13px -7px #c1c1c1;
	z-index: 1000;
    position: absolute;
}
.options-left i, .options-right i{
	cursor: pointer;
}
.options-left i:hover, .options-right i:hover{
	color: #000;
}
.chats{
	height: 285px;
	overflow-x: scroll;
	overflow-x: hidden;
	background: #ECEFF1;
	position: relative;
    //top: 35px;
}
.chats ul li{
	display: inline-block;
	list-style: none;
	clear: both;
	font-size: 13px;
}
.send-msg{
	position: relative;
}
.send-msg:after{
	content: "";
	width:0;
	height:0;
	top: 0px;
	right: -8px;
	position: absolute;
	border-top: 8px solid #CFD8DC;
	border-left: 8px solid transparent;
	border-right: 8px solid transparent;
}
.send-msg p{
	background: #CFD8DC;
}
.sender-img{
	display: inline;
}
.sender-img img{
	width: 32px;
	height: 32px;
	border-radius: 100%;
}
.receive-msg .receive-msg-desc{
	display: inline-block;
	position: relative;
}
.receive-msg-desc:before{
	content: "";
	width:0;
	height:0;
	top: 0px;
	left: -8px;
	position: absolute;
	border-top: 8px solid #fff;
	border-left: 8px solid transparent;
	border-right: 8px solid transparent;
}
.receive-msg-time,.send-msg-time{
	color: #7D7E87;
	font-size: 10px;
}
.receive-msg-time i{
	font-size: 4px;
}
.msg-box{
	//margin-top: 35px;
}
.msg-box i{
	color: #404040;
}
.msg-box textarea{
	font-size: 14px;
}
.msg-box textarea:focus{
	outline: none;
}
.splitter {
  flex: 0 0 auto;
  width: 18px;  
  background: url(https://raw.githubusercontent.com/RickStrahl/jquery-resizable/master/assets/vsizegrip.png) center center no-repeat #535353;
  min-height: 200px;
  cursor: col-resize;  
}
.panel-left {
  flex: 0 0 auto;
  min-width:40vw;
  max-width:65vw;
  width:50vw;
  /* only manually resize */
}
.panel-right {
  flex: 1 1 auto;
  /* resizable */
}
#w3mission::-webkit-scrollbar {
    width: 0px;
    background: transparent; /* make scrollbar transparent */
}
#typing_b {
	visibility:hidden;
}
#mydiv1 {
  position: absolute;
  z-index: 9;
  background-color: #f1f1f1;
  text-align: center;
  border: 1px solid #d3d3d3
}

#mydiv3 {
  position: absolute;
  z-index: 9;
  background-color: #f1f1f1;
  text-align: center;
  border: 1px solid #d3d3d3
}

#mydiv1header {
  cursor: move;
  z-index: 10;
  background-color: #2196F3;
  color: #fff;
  text-align-last: left;
  font-weight: lighter;
}

#mydiv3header {
  cursor: move;
  z-index: 10;
  background-color: indianred;
  color: #fff;
  text-align-last: left;
  font-weight: lighter;
}

#mydiv1header1 {
  z-index: 10;
  background-color: #2196F3;
  color: #fff;
  text-align-last: left;
  font-weight: lighter;
}

#mydiv2header1 {
  z-index: 10;
  background-color: #2196F3;
  color: #fff;
  padding:5px;
}

#mydiv2header {
  z-index: 10;
  background-color: #2196F3;
  color: #fff;
}

#mydiv4header {
  z-index: 10;
  background-color: indianred;
  color: #fff;
}
.resize_op {
  overflow-y: scroll;
  resize: both;
  max-width: 50vw;
  max-height: 50vh;
  border: 1px solid black;
  min-width: 400px;
  min-height: 250px;
}

.preload{
 width: 100%;
 height: 100%;
 background: #333;
 position: fixed;
 top: 0;
 left: 0;
 z-index: 1;
}
.logo {
 width: 900px;
 height: 70px;
 margin: 150px auto 50px auto;
 font-size: 50px;
 text-shadow: -1px 2px 2px #000;
 text-align: center;
 color: azure;
}
.loader-frame {
 width: 70px;
 height: 70px;
 margin: auto;
 position: relative;
}
.loader1, .loader2 {
 position: absolute;
 border: 5px solid transparent;
 border-radius: 50%;
}
.loader1 {
 width: 70px;
 height: 70px;
 border-top: 5px solid azure;
 border-bottom: 5px solid azure;
 animation: clockwisespin 2s infinite;
}
.loader2 {
 width: 60px;
 height: 60px;
 border-left: 5px solid darkturquoise;
 border-right: 5px solid darkturquoise;
 top: 5px; left: 5px;
 animation: anticlockwisespin 2s infinite;
}


@keyframes clockwisespin {
 from {transform: rotate(0deg);}
 to {transform: rotate(360deg);}
}
@keyframes anticlockwisespin {
 from {transform: rotate(0deg);}
 to {transform: rotate(-360deg);}
}
@keyframes fadeout {
 from {opacity: 1;}
 to {opacity: 0;}
}

.active, .collapsible:hover {
  background-color: #555;
}

.content {
  position:fixed;
  padding: 5px;
  display: none;
  overflow: hidden;
  background-color: #f1f1f1;
}
.navbar-brand{
  margin-right: 0rem;
}
</style>

<body>
<% if (!type) { %>
<div class = "preload" id = "preload">
  <div class ="logo">
   <span style = "color: #3492eb;">InterviewBuddy</span>-<span style = "color: #ebae34;">Pro</span>
  </div>
   <div class = "loader-frame">
    <div class = "loader1" id = "loader1"></div>
    <div class = "loader2" id = "loader2"></div>
   </div>
  <div class ="logo" style="margin: 50px auto 50px auto;">
   Please wait while we connect you to the Interviewer....
  </div>
</div>
<div id="container" style="visibility:hidden">
<% } %>

<div id="mobv" class="col-md-12" style="visibility:hidden;position: absolute;text-align: center;background: antiquewhite;"><span style="font-size: x-large;">Please Maximize Your Window</span></div>

<% if (type) { %>
	<div id="container">
<% } %>
<!--<div style="display:flex">
	<div class="col-lg-6" style="display:inline-flex;">
		<h4 style="margin-top: 0px;margin-bottom: 0px;">Select Programming Language:</h4>
		&nbsp;
		<select id="selection" onchange="seteditor()">
			<option value="python3">Python 3.5.3</option>
			<option value="python2">Python 2.7.13</option>
			<option value="java">Java 1.8.0</option>
			<option value="c">C (gcc 6.3.0)</option>
			<option value="cpp">C++ (gcc 6.3.0)</option>
			<option value="javascript">JavaScript</option>
		</select>
	</div>
	&nbsp;
	<div class="col-lg-2">
		<h4 style="margin-top: 0px;margin-bottom: 0px;">Input:</h4>
	</div>
	&nbsp;
	<div class="col-lg-2">
		<h4 style="margin-top: 0px;margin-bottom: 0px;">Output:</h4>
	</div>
</div> -->
	<div style="display: inline-flex;width: 100%;background: #535353;">
  <div class="col-md-6">
	<div style="display:inline-flex;padding:5;width:100%;">
					<div class="col-sm-1"></div>
					<div class="col-lg-4">
						<select id="selection" class="custom-select btn btn-primary dropdown-toggle" onchange="seteditor()" style="border-radius: 15px;width:auto;border:none;color: aliceblue;">
							<option value="python3">Python 3.5.3</option>
							<option value="python2">Python 2.7.13</option>
							<option value="java">Java 1.8.0</option>
							<option value="c">C (gcc 6.3.0)</option>
							<option value="cpp">C++ (gcc 6.3.0)</option>
							<option value="javascript">JavaScript</option>
							<option value="mysql">Mysql</option>
							<option value="R">R</option>
							<option value="Ruby">Ruby</option>
							<option value="C#">C#</option>
						</select>
					</div>
					<div class="col-sm-1" style="align-self: center;">
						<!--<button type="button" class="collapsible">Open Collapsible</button>
						<div class="content" style="position:absolute;z-index:2000">
							<textarea id="input" placeholder="Inputs Here..."></textarea>
						</div>-->
						<a href="" data-toggle="button" aria-expanded="false"><i class="fa fa-share-square fa-2x collapsible" title="Input"></i></a>
						<div class="content" id="content" style="position:absolute;z-index:2000">
							<textarea id="input" placeholder="Inputs Here..."></textarea>
						</div>
						<!--<div style="align: center;" class="dropdown">
							<a href="" data-toggle="dropdown" aria-expanded="false"><i class="fa fa-sign-in fa-2x"></i></a>
							<div class="dropdown-menu" style="">
								<a href="#" class="dropdown-item"><textarea id="input" placeholder="Inputs Here..."></textarea></a>
							</div>
						</div>-->
					</div>
					<div class="col-sm-2" align="right">
						<button id="exec" type="button" class="btn btn-primary" onclick="submit()" style="border-radius: 15px;"><i class="fa fa-chevron-right"></i> Run</button>
					</div>
				</div>
		</div>
		<% if (type) { %>
			<div style="display:inline-flex;padding:5;width:100%;justify-content: flex-end;">
				
					<div style="padding-right:10">
						<button id="exec" type="button" class="btn btn-info" onclick="hide_logs()" style="border-radius: 15px;">Logs</button>
					</div>
					<div>
						<button id="exec" type="button" class="btn btn-danger" onclick="download();" style="border-radius: 15px;">End Test</button>
					</div>
				
			</div>
		<% } %>
	</div>
	<div style="display:flex;background:dimgrey;">
		<div style="background: dimgrey;">
			<nav class="navbar fixed-left navbar-light" style=""></nav>
			<nav class="navbar fixed-left navbar-light" style="background: #535353;padding:10;">
				<a class="navbar-brand" href="#"><i class="fa fa-code fa-lg"></i></a>
			</nav>
		</div>
		<div class="panel-left" style="height: 100vh;background: #535353;padding-left:5px;padding-right:0px;">
			<div id="editor" class="panel-top"></div>
			<div class="splitter-horizontal"></div>
			<textarea readonly id="output" placeholder="Output Here.." class="panel-bottom"></textarea>
		</div>
		<div class="splitter"></div>
		<div class="panel-right" style="background:#272822;">
			<div class="row" style="height:35vh;margin-right:0px;margin-left:0px;justify-content:flex-end;padding:10">
						<div style="display: flex;align-items: flex-end;">
							<i class="fa fa-expand fa-lg" style="color: black;background: white;padding: 7px;cursor: pointer;"></i>
						</div>
						<div style="position:relative;">
							<!-- 
								Display video of the current user
								Note: mute your own video, otherwise you'll hear yourself ...
							-->
							<!--<div class="text-center">-->
								<video id="peer-camera" height="100%" width="300" autoplay="autoplay" class="center-block" style="object-position:left;object-fit:fill;border:ridge;"></video>
								<!--<span class="label label-info">You</span>-->
							<!--</div>-->
							<div style="position:absolute;width: 30%;height: 30%;bottom: 0;right: 0;justify-content: flex-end;display: flex;">
								<!-- Display video of the connected peer -->
								<!--<div class="text-center">-->
								<video id="my-camera" height="100%" autoplay="autoplay" class="center-block" muted="true" style="object-position:left;object-fit:fill;border:ridge;width:100%"></video>
								<!--<span class="label label-info" id="connected_peer"></span>-->
								<!--</div>-->
							</div>
						</div>
			</div>
			<div class="row" style="height:65vh;margin-right:0px;margin-left:0px;">
				<div class="col-sm-4">
					<div id="mydiv1" class="mydiv1">
						<div style="display:flex">
							<div id="mydiv1header" class="col-sm-10">Problems</div>
								<div id="mydiv2header" class="col-sm-2">
									<div class="options-right" style="display:flex;justify-content:flex-end;padding-right:15px;">
										<i class="fa fa-window-minimize hide-chat-box1"></i>
									</div>	
								</div>
						</div>
						<% if (type) { %>
							<textarea class="resize_op" id="resize_op" oninput="res_po()"></textarea>
						<% } %>
						<% if (!type) { %>
							<textarea class="resize_op" id="resize_op" disabled></textarea>
						<% } %>
					</div>
					<% if (type) { %>
						<div id="mydiv3" class="mydiv3" style="top: 34px; left: 28px;visibility:hidden;">
							<div style="display:flex">
								<div id="mydiv3header" class="col-sm-10">Logger</div>
									<div id="mydiv4header" class="col-sm-2">
										<div class="options-right" style="display:flex;justify-content:flex-end;padding-top:5px">
											<i class="fa fa-times fa-lg hide-chat-box2"></i>
										</div>	
									</div>
							</div>
								<textarea class="resize_op" id="resize_op1" disabled></textarea>
						</div>
					<% } %>
					<div style="display:flex;bottom: 5;position: fixed;visibility:hidden;" id="prob_h">
							<div id="mydiv1header1" class="col-sm-10">Problems</div>
								<div id="mydiv2header1" class="col-sm-2">
									<div class="options-right" style="display:flex;justify-content:flex-end;padding-right:15px;">
										<i class="fa fa-window-maximize hide-chat-box1"></i>
									</div>	
								</div>
					</div>
				</div>
				<div class="col-sm-8">
				<div class="chat-main">
                <div class="col-md-12 chat-header">
                    <div class="row header-one text-white p-1">
                        <div class="col-md-6 name pl-2">
                            <i class="fa fa-comment"></i>
                            <h6 class="ml-1 mb-0">Interviewer</h6>
                        </div>
                        <div class="col-md-6 options text-right pr-0">
                            <i class="fa fa-window-minimize hide-chat-box hover text-center pt-1"></i>
                        </div>
                    </div>
                </div>
                <div class="chat-content">
                    <div class="col-md-12 chats pt-3 pl-2 pr-3 pb-3">
                        <ul class="p-0" id="msg-app">
							<li class="receive-msg float-left mb-2" id="typing_b" style="align-items: flex-end;display:flex;">
								<div class="sender-img">
									<img src="boy.png" class="float-left">
								</div>
								&nbsp;&nbsp;&nbsp;
								<div class="float-left ml-2">
									<div class="dot-pulse"></div>
								</div>
							</li>
                        </ul>
                    </div>
                    <div class="col-md-12 p-1 msg-box" style="background:white">
                        <div style="display:flex;justify-content: center;align-items: center;">
							
                            <div class="col-md-10" style="padding:0;display:flex;">
								<textarea id="w3mission" class="border-0" placeholder=" Send message" style="height:inherit;width:inherit;resize:none;max-height: 75px;" rows="2"></textarea>
                                <!--<input type="text" class="border-0" placeholder=" Send message" />-->
                            </div>
                            <div class="col-md-2 text-right options-right">
								<i class="fa fa-paper-plane mr-2 send-opp"></i>
                            </div>
                        </div>
                    </div>
                </div>
				</div>
				</div>
				</div>
			</div>
			<!--<textarea id="input" class="col-lg-2" placeholder="Inputs Here..."></textarea>
			
			<div style="display:flex;width: 100%;">
				<div class="col-sm-6" align="right">
					<button id="exec" type="button" onclick="submit()">Execute</button>
				</div>
				<div class="col-sm-6" style="display: flex">
					<h4 style="margin-top: 0px;margin-bottom: 0px;">Status:</h4>
					&nbsp;
					<h4 style="margin-top: 0px;margin-bottom: 0px;" id="status"></h4>
				</div> -->
		</div>
	</div>
</div>

<script>
	var state1=true;
	var statei=true;
	$('.hide-chat-box').click(function(){
		if(state1){
			document.getElementsByClassName('hide-chat-box')[0].classList.value="fa fa-window-maximize hide-chat-box hover text-center pt-1";
			state1=false;
		}
		else{
			document.getElementsByClassName('hide-chat-box')[0].classList.value="fa fa-window-minimize hide-chat-box hover text-center pt-1";
			state1=true;
		}
		$('.chat-content').slideToggle(100);
	});
	
	$('.hide-chat-box1').click(function(){
		if(statei){
			document.getElementById("mydiv1").style.visibility="hidden";
			document.getElementById("prob_h").style.visibility="visible";
			statei=false;
		}
		else{
			document.getElementById("mydiv1").style.visibility="visible";
			document.getElementById("prob_h").style.visibility="hidden";
			statei=true;
		}
	});
	$('.hide-chat-box2').click(function(){
		document.getElementById("mydiv3").style.visibility="hidden";
	});
	/*var parameters = location.search.substring(1).split("&");
	var peer;
	var conn;
	var l,p;
	//var conn = peer.connect('dinesh21', {host: 'localhost', port: 3000, path: '/api'});
	if(parameters[0]){
		var temp = parameters[0].split("=");
		l = unescape(temp[1]);
		temp = parameters[1].split("=");
		p = unescape(temp[1]);
		peer = new Peer(l, {host: 'localhost', port: 3000, path: '/api'});
		conn = peer.connect(p, {host: 'localhost', port: 3000, path: '/api'});
	}*/
	var temp;
	var arr=[];
	ace.require("ace/ext/language_tools");
	window.ep=ace.edit("editor");
	ep.getSession().setUseWrapMode(true);
	//ep.setOption("indentedSoftWrap", false);
	ep.setOptions({
		indentedSoftWrap:true,
		enableBasicAutocompletion: true,
		enableLiveAutocompletion: true
	});
	ep.setShowPrintMargin(false);
	ep.setFontSize(16);
	ep.setTheme("ace/theme/monokai");
	//ep.setTheme("ace/theme/clouds");
	ep.session.setMode("ace/mode/python");
	ep.setAutoScrollEditorIntoView(true);
	function seteditor(){
		//arr[temp]=ep.getSession().getValue();
		var x = document.getElementById("selection").value;
		if(x=="python2" || x=="python3"){
			/*if(x=="python3")
				temp=0;
			else
				temp=1;*/
			ep.session.setMode("ace/mode/python");
		}
		else if(x=="c" || x=="cpp"){
			/*if(x=="cpp")
				temp=2;
			else
				temp=3;
			*/
			ep.session.setMode("ace/mode/c_cpp");
		}
		else if(x=="java"){
			//temp=4;
			ep.session.setMode("ace/mode/java");
		}
		else if(x=="mysql"){
			//temp=4;
			ep.session.setMode("ace/mode/mysql");
		}
		else if(x=="javascript"){
			//temp=4;
			ep.session.setMode("ace/mode/javascript");
		}
		else if(x=="R"){
			//temp=4;
			ep.session.setMode("ace/mode/r");
		}
		else if(x=="Ruby"){
			//temp=4;
			ep.session.setMode("ace/mode/ruby");
		}
		else if(x=="C#"){
			//temp=4;
			ep.session.setMode("ace/mode/csharp");
		}
		/*
		if(arr[temp])
			ep.setValue(arr[temp],1);
		else
			ep.setValue("",-1);
		*/
		document.getElementById("editor").childNodes[0].focus();
	}
	seteditor();
	document.getElementById("editor").childNodes[0].focus();
	function submit(){
			document.getElementById("exec").disabled=true;
			document.getElementById("exec").childNodes[0].classList.value="spinner-border spinner-border-sm";
			var xhr = new XMLHttpRequest();
			xhr.open("POST", "compile/"+document.getElementById("selection").value, true);
			xhr.setRequestHeader('Content-Type', 'application/json');
			
			xhr.onload = function() {
				if(this.responseText=="Wrong Selection" || this.responseText=="Server Error" ){
						document.getElementById("status").innerHTML=this.responseText.fontcolor("red");
					}
				else{
						console.log(this.responseText);
						var rest=JSON.parse(this.responseText);
						if(rest.result_output.errorType){
							var temp=rest.result_output.errorType+" Error";
							//document.getElementById("status").innerHTML=temp.fontcolor("red");
							document.getElementById('output').value=rest.result_output.stderr;
						}
						else{
							//document.getElementById("status").innerHTML="Successfully Compiled".fontcolor("green");
							document.getElementById('output').value=rest.result_output.stdout;
						}
					}
					document.getElementById("exec").childNodes[0].classList.value="fa fa-chevron-right";
					document.getElementById("exec").disabled=false;
				}
		xhr.send(JSON.stringify({carrier : ep.getSession().getValue(), carrier_ip : document.getElementById("input").value}));
	}
	function hide_logs(){
		document.getElementById("mydiv3").style.visibility="visible";
	}
	
	/*
	ep.on("change", function(e){
		conn = peer.connect(p, {host: 'localhost', port: 3000, path: '/api'});
		conn.send(e);
		temp=e;
		console.log(e);
	});
	peer.on('connection', (conn) => {
		conn.on('data', (data) => {
			ep.gotoLine(data.start.row+1, data.start.column, 1);
		if(data.action=="insert")
			ep.insert(data.lines.join("\n"));
		else if(data.action=="remove")
			ep.remove({start:temp.start,end:temp.end});
		// Will print 'hi!'
		console.log(data);
		});
	});
	ep.on("changeMode", function(e){
		console.log(e);
	});
	ep.on("changeFrontMarker", function(e){
		
	})

	/*str=ep.getSession().getValue();
	ep.getSession().on('change', function () {
			str=ep.getSession().getValue(); 
			});*/
	/*ep.commands.on("exec", function(e) { 
		var rowCol = ep.selection.getCursor();
		if (rowCol.row == 1) {
				console.log("new",e);
				e.preventDefault();
				e.stopPropagation();
				ep.insert("\n");
			}
	});*/
</script>
	<script>
		//autosize(document.getElementById("w3mission"));
		var yup=true;
		var yup1=true;
		var xmas;
		var fan;
		var marker;
		var interviewer;
		var user_text;
		var parameters = location.search.substring(1).split("&");
        var conn;
		var call;
		var interviewer;
		var Range = ace.require('ace/range').Range;
		<% if (type) { %>
		var merger;
		let mediaRecorder;
		var recordedChunks = [];
		<% } %>
		l = "<%- sender %>";
		p = "<%- reciever %>";
		if(<%- type %>){
			interviewer=true;
			user_text="Candidate: ";
		}
		else
			user_text="Interviewer: ";
		/*var sock_client = io.connect('https://enbiocrypts.nl');
		sock_client.on('connect', function() {
			console.log(`sock_client connect`);
		});*/
		//var peer = new Peer(l,{host:'localhost',path:'/api', port:443})
		var peer = new Peer(l,{host: 'ebc-tests.herokuapp.com', port: 443, path: '/api',secure:true});
		//var peer = new Peer(l,{host: 'enbiocrypts.nl', port: 443, path: '/api'});
		var c = peer.connect(p);
        peer.on('open', function (id) {
            //$('#pid').text(id);
			console.log(id);
        });
        peer.on('connection', connect);
        //CONNECT
        function connect(c) {
            conn = c;
            console.log('in connect', conn.peer);
			<% if (type) { %>
				Notify(user_text+"I'm Online..", null, null, "success");
				document.getElementById("resize_op1").value=document.getElementById("resize_op1").value+moment().format()+">>"+user_text+"I'm Online.."+"\n"
			<% } else { %>
				Notify(user_text+"I'm Online..", null, null, "success");
			<% } %>
			call = peer.call(conn.peer, window.localStream);

			call.on('stream', function (stream) {
				window.peer_stream = stream;
				onReceiveStream(stream, 'peer-camera');
			<% if (type) { %>
				merger = new VideoStreamMerger();
				merger.addStream(window.peer_stream, {
					x: 0, // position of the topleft corner
					y: 0,
					width: merger.width,
					height: merger.height,
					mute: false // we don't want sound from the screen (if there is any)
				});

				// Add the webcam stream. Position it on the bottom left and resize it to 100x100.
				merger.addStream(window.localStream, {
					x: 0,
					y: merger.height - 100,
					width: 100,
					height: 100,
					mute: false
				});

				// Start the merging. Calling this makes the result available to us
				merger.start();
				let options = {mimeType: 'video/webm;codecs=vp9'};
				if (!MediaRecorder.isTypeSupported(options.mimeType)) {
					console.error(`${options.mimeType} is not Supported`);
					options = {mimeType: 'video/webm;codecs=vp8'};
				if (!MediaRecorder.isTypeSupported(options.mimeType)) {
					console.error(`${options.mimeType} is not Supported`);
					options = {mimeType: 'video/webm'};
				if (!MediaRecorder.isTypeSupported(options.mimeType)) {
					console.error(`${options.mimeType} is not Supported`);
					options = {mimeType: ''};
						}
					}
				}
				
				try {
					mediaRecorder = new MediaRecorder(merger.result, options);
				} catch (e) {
					console.error('Exception while creating MediaRecorder:', e);
					return;
				}
				mediaRecorder.ondataavailable = handleDataAvailable;
				mediaRecorder.start();
			<% } %>
				//onReceiveStream(merger.result, 'merge-camera');
			});
            //$('#rid').val(conn.peer);
            //$('#rid').prop('disabled', true);
            //$('#progbar').width('100%');
            //document.getElementById('status').innerText = "Connected";
            conn.on('data', function (data) {
				if(data.action=="message_s"){
					document.getElementById("typing_b").style.visibility="hidden";
					var x=document.createElement("li");
					x.setAttribute("class","receive-msg float-left mb-2");
					x.setAttribute("style","display:flex;white-space: normal;word-break: break-word;");
					var d1=document.createElement("div");
					d1.setAttribute("class","sender-img");
					var img=document.createElement("img");
					img.setAttribute("src","boy.png");
					img.setAttribute("class","float-left");
					d1.appendChild(img);
					var d2=document.createElement("div");
					d2.setAttribute("class","receive-msg-desc float-left ml-2");
					var y=document.createElement("p");
					y.setAttribute("class","bg-white m-0 pt-1 pb-1 pl-2 pr-2 rounded");
					y.innerHTML=data.message;
					d2.appendChild(y);
					x.appendChild(d1);
					x.append(d2);
					document.getElementById("msg-app").insertBefore(x,document.getElementById("msg-app").childNodes[document.getElementById("msg-app").childNodes.length-2]);
					//document.getElementById("msg-app").appendChild(x);
				}
				else if(data.action=="typing_l"){
						if(xmas)
							clearTimeout(xmas);
						document.getElementById("typing_b").style.visibility="visible";
						xmas=setTimeout(function() {
							document.getElementById("typing_b").style.visibility="hidden";
						}, 2000);	
				}
			<% if (!type) { %>
				else if(data.action=="recieve_prob"){
					document.getElementById("resize_op").value=data.message;
				}
			<% } %>
				else if(data.action=="alert_log"){
					<% if (type) { %>
						document.getElementById("resize_op1").value=document.getElementById("resize_op1").value+moment().format()+">>"+user_text+data.message+"\n"
					<% } %>
					Notify(user_text+data.message, null, null, data.type);
				}
				else{
					yup=false
					if(marker)
						ep.session.removeMarker(marker);
					m=ep.getCursorPosition();
					//ep.gotoLine(data.start.row+1, data.start.column, 1);
					if(data.action=="insert"){
						ep.session.insert(data.start,data.lines.join("\n"));
						ep.gotoLine(m.row+1, m.column, 1);
						marker=ep.session.addMarker(new Range(data.end.row,data.end.column,data.end.row), "MyCursorClass", "line", true);
						//ep.insert(data.lines.join("\n"));
					}
					else if(data.action=="remove"){
						ep.session.remove({start:data.start,end:data.end});
						ep.gotoLine(m.row+1, m.column, 1);
						marker=ep.session.addMarker(new Range(data.start.row,data.start.column,data.start.row), "MyCursorClass", "line", true);
					}
					else if(data.action=="move"){
						marker=ep.session.addMarker(new Range(data.start.row,data.start.column,data.start.row), "MyCursorClass", "line", true);
					}
					
					//else if(data.action=="move")
					//	ep.session.addMarker(new Range(data.mouse.row,data.mouse.column), "warning", "line", true);
						// Will print 'hi!'
					/*if(yup1){
						console.log(data);
						p=ep.getCursorPosition();
						console.log(p);
						marker=ep.session.addMarker(new Range(p.row,p.column,p.row), "MyCursorClass", "line", true);
						ep.gotoLine(m.row+1, m.column, 1);
					}
					yup1=true;*/
					/*var interval = setInterval(function(){
					console.log(document.getElementsByClassName("ace_start")[0].parentElement.childNodes.length);
						if(document.getElementsByClassName("ace_start")[0]){
							if(document.getElementsByClassName("ace_start")[0].parentElement.childNodes.length>1)
								document.getElementsByClassName("ace_start")[0].parentElement.removeChild(document.getElementsByClassName("ace_start")[0].parentElement.childNodes[1])	
							}
						},1);*/
					yup=true
				}
				console.log(data);
                //$('#inputText').val($('#inputText').val() + data);
            });
			conn.on('disconnected',function(){
				console.log("Candidate left");
			});
			conn.on('close',function(){
				<% if (type) { %>
					document.getElementById("resize_op1").value=document.getElementById("resize_op1").value+moment().format()+">>"+user_text+"I'm Disconnected.."+"\n"
					Notify(user_text+"I'm Disconnected..", null, null, "danger");
				<% } else { %>
					Notify(user_text+"I'm Disconnected..", null, null, "danger");
				<% } %>
				console.log("Candidate closed");
			});
        }
		
		peer.on('disconnected',function(){
			var interval = setInterval(function(){
				if(peer.open==true || peer.destroyed==true)
					clearInterval(interval);
				else{
						peer.reconnect();
					}
				},4000)
		});
		
		ep.on("changeSelection", function(e){
			console.log(e);
			if(yup){
				conn.send({action:"move",start : ep.getCursorPosition()});
				console.log({mouse : ep.getCursorPosition()});
			}
		});
        ep.on("change", function(e){
			if(yup){
            console.log(e);
			fan=e;
			if(e.action=="remove"){
				if(marker){
					if(ep.multiSelect.session.$frontMarkers[marker].range.start.row>e.start.row){
						ep.session.removeMarker(marker);
						marker=ep.session.addMarker(new Range(e.start.row,e.start.column,e.start.row), "MyCursorClass", "line", true);
					}
					else if((ep.multiSelect.session.$frontMarkers[marker].range.start.row==e.start.row)&&(ep.multiSelect.session.$frontMarkers[marker].range.start.column>e.start.column)){
						ep.session.removeMarker(marker);
						marker=ep.session.addMarker(new Range(e.start.row,e.start.column,e.start.row), "MyCursorClass", "line", true);
					}
				}
			}
            conn.send(e);
			}
        });
		/*
		ep.on("paste", function(e){
			e.text="";
			console.log(e);
		});*/
		ep.on("copy", function(e){
			console.log(e);
			e.text="";
		});
		
        c.on('open', function () {
			interviewer=false;
            console.log(c);
            connect(c);
        });

		 $(".panel-top").resizable({
			handleSelector: ".splitter-horizontal",
			resizeWidth: false,
			onDragStart: function () {
				ep.resize();
			},
			onDragEnd: function () {
				ep.resize();
			}
		});
		$(".panel-bottom").resizable({
			handleSelector: ".splitter-horizontal",
			resizeWidth: false,
			resizeHeightFrom : 'top',
			onDragStart: function () {
				ep.resize();
			},
			onDragEnd: function () {
				ep.resize();
			}
		});
		$(".panel-left").resizable({
			handleSelector: ".splitter",
			resizeHeight: false,
			onDragStart: function () {
				ep.resize();
			},
			onDragEnd: function () {
				ep.resize();
			}
		});
		$('.send-opp').click(function(){
			var tes1=document.getElementById("w3mission").value.split('\n').join('<br>');
			document.getElementById("w3mission").value="";
			conn.send({action:"message_s",message:tes1});
			var x=document.createElement("li");
			x.setAttribute("class","send-msg float-right mb-2");
			x.setAttribute("style","display:flex;white-space: normal;word-break: break-word;");
			var y=document.createElement("p");
			y.setAttribute("class","pt-1 pb-1 pl-2 pr-2 m-0 rounded");
			//y.innerHTML.split('\n').join("</br>");
			y.innerHTML=tes1;
			x.appendChild(y);
			document.getElementById("msg-app").insertBefore(x,document.getElementById("msg-app").childNodes[document.getElementById("msg-app").childNodes.length-2]);
			//document.getElementById("msg-app").appendChild(x);
		});
	function typing(){
		//console.log("typing");
		conn.send({action:"typing_l"});
	};
	
	$("#w3mission").keypress(function(e) {
		typing();
		if(e.which == 13 && e.shiftKey) {
			
		}
		else if (e.which == 13) {
			e.preventDefault(); //Stops enter from creating a new line

			$('.send-opp').click(); //or ajax submit
		}
	});
	
	<% if (type) { %>
		function res_po(){
			var tes1=document.getElementById("resize_op").value;
			conn.send({action:"recieve_prob",message:tes1});
		}
	
	function handleDataAvailable(event) {
		console.log('handleDataAvailable', event);
		if (event.data && event.data.size > 0) {
			recordedChunks.push(event.data);
		}
	}
	
	function download() {
		mediaRecorder.stop();
		setTimeout(function(){
			var blob = new Blob(recordedChunks, {
				type: 'video/webm'
			});
			var url = URL.createObjectURL(blob);
			var a = document.createElement('a');
			document.body.appendChild(a);
			a.style = 'display: none';
			a.href = url;
			a.download = 'test.webm';
			a.click();
			window.URL.revokeObjectURL(url);}
		,2000);
	}
	
	<% } %>
    </script>
<script>
//Make the DIV element draggagle:

dragElement(document.getElementById("mydiv1"));
<% if (type) { %>
	dragElement(document.getElementById("mydiv3"));
<% } %>
function dragElement(elmnt) {
  var pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;
  if (document.getElementById(elmnt.id + "header")) {
    /* if present, the header is where you move the DIV from:*/
    document.getElementById(elmnt.id + "header").onmousedown = dragMouseDown;
  } else {
    /* otherwise, move the DIV from anywhere inside the DIV:*/
    elmnt.onmousedown = dragMouseDown;
  }

  function dragMouseDown(e) {
    e = e || window.event;
    e.preventDefault();
    // get the mouse cursor position at startup:
    pos3 = e.clientX;
    pos4 = e.clientY;
    document.onmouseup = closeDragElement;
    // call a function whenever the cursor moves:
    document.onmousemove = elementDrag;
  }

  function elementDrag(e) {
    e = e || window.event;
    e.preventDefault();
    // calculate the new cursor position:
    pos1 = pos3 - e.clientX;
    pos2 = pos4 - e.clientY;
    pos3 = e.clientX;
    pos4 = e.clientY;
    // set the element's new position:
    elmnt.style.top = (elmnt.offsetTop - pos2) + "px";
    elmnt.style.left = (elmnt.offsetLeft - pos1) + "px";
  }

  function closeDragElement() {
    /* stop moving when mouse button is released:*/
    document.onmouseup = null;
    document.onmousemove = null;
  }
};
</script>
<% if (!type) { %>
<script type="text/javascript">

(function(){
 
 var preload = document.getElementById("preload");
 var loading = 0;
 var id = setInterval(frame, 64);

 function frame(){
	
	if(conn){
		if(loading == 50) {
			clearInterval(id);
			document.getElementById("preload").style.visibility="hidden";
			document.getElementById("container").style.visibility="visible";
		}
		else {
			loading = loading + 1;
			if(loading == 40) {
				preload.style.animation = "fadeout 1s ease";
			}
		}
	}
  
 }


})();
</script>
<% } %>
<script>
Notify = function(text, callback, close_callback, style) {

	var time = '10000';
	var $container = $('#notifications');
	var icon = '<i class="fa fa-info-circle "></i>';
 
	if (typeof style == 'undefined' ) style = 'warning'
  
	var html = $('<div class="alert alert-' + style + '  hide">' + icon +  " " + text + '</div>');
  
	$('<a>',{
		text: '×',
		class: 'button close',
		style: 'padding-left: 10px;',
		href: '#',
		click: function(e){
			e.preventDefault()
			close_callback && close_callback()
			remove_notice()
		}
	}).prependTo(html)

	$container.prepend(html)
	html.removeClass('hide').hide().fadeIn('slow')

	function remove_notice() {
		html.stop().fadeOut('slow').remove()
	}
	
	var timer =  setInterval(remove_notice, time);

	$(html).hover(function(){
		clearInterval(timer);
	}, function(){
		timer = setInterval(remove_notice, time);
	});
	
	html.on('click', function () {
		clearInterval(timer)
		callback && callback()
		remove_notice()
	});
  
  
}
</script>
<script>
    peer.on('call', function (call) {
            // Answer the call with your own video/audio stream
            call.answer(window.localStream);

            // Receive data
            call.on('stream', function (stream) {
                // Store a global reference of the other user stream
                window.peer_stream = stream;
                // Display the stream of the other user in the peer-camera video element !
                onReceiveStream(stream, 'peer-camera');
            });

            // Handle when the call finishes
            call.on('close', function(){
                //alert("The videocall has finished");
            });

            // use call.close() to finish a call
    });

    /**
     * Starts the request of the camera and microphone
     *
     * @param {Object} callbacks
     */
    function requestLocalVideo(callbacks) {
        // Monkeypatch for crossbrowser geusermedia
        navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;

        // Request audio an video
        navigator.getUserMedia({ audio: true, video: true }, callbacks.success , callbacks.error);
    }

    /**
     * Handle the providen stream (video and audio) to the desired video element
     *
     * @param {*} stream
     * @param {*} element_id
     */
	
    function onReceiveStream(stream, element_id) {
        // Retrieve the video element according to the desired
        var video = document.getElementById(element_id);
        // Set the given stream as the video source
        //video.src = window.URL.createObjectURL(stream);
		video.srcObject=stream;
        // Store a global reference of the stream
        window.peer_stream = stream;
    }

    requestLocalVideo({
        success: function(stream){
            window.localStream = stream;
            onReceiveStream(stream, 'my-camera');
        },
        error: function(err){
            alert("Cannot get access to your camera and video !");
            console.error(err);
        }
    });
	<% if (!type) { %>
		$(document).mouseleave(function () {
			conn.send({action:"alert_log",message:"Cursor away from Window",type:"danger"});
		});
		function userCheated() {
		// The user cheated by leaving this window (e.g opening another window)
		// Do something
			conn.send({action:"alert_log",message:"On another tab",type:"danger"});
		}
		window.onblur = userCheated;
	<% } %>
	
	
</script>
<script>
var coll = document.getElementsByClassName("collapsible");
var fr=false
  coll[0].addEventListener("click", function() {
    var content = document.getElementsByClassName("content")[0];
		if (content.style.display === "block") {
			content.style.display = "none";
		} else {
			content.style.display = "block";
			$('#input').focus();
		}
	console.log("click ");
  });
</script>
<script>
$('#content').focusout(function(ev)
{
   $('#content').hide();
});
</script>
<!--<script src="connection.js" type="text/javascript" charset="utf-8"></script>-->
</body>
</html>