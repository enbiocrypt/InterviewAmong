
<html>
<head>
	<title>IB</title>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<script src="jquery/dist/jquery.min.js"></script>
	<script src="popper.js/dist/umd/popper.min.js"></script>
	<script src="bootstrap/dist/js/bootstrap.bundle.min.js"></script>
	<script src="webrtc-adapter/out/adapter.js"></script>
	<script src="deep-diff/dist/deep-diff.min.js"></script>
	<script src="moment/moment.js"></script>
	<script src="jquery-resizable-dom/dist/jquery-resizable.min.js"></script>
	<link rel="stylesheet" href="bootstrap/dist/css/bootstrap.min.css">
	<link rel="stylesheet" href="font-awesome/css/font-awesome.min.css">
	<link rel="stylesheet" href="three-dots/dist/three-dots.min.css">
	<script src="https://cdn.jsdelivr.net/npm/peerjs@0.3.20/dist/peer.min.js"></script>
	<!--<script src="peerjs/dist/peerjs.min.js"></script>-->
	<!--<script src="https://cdn.jsdelivr.net/npm/peerjs@0.3.20/dist/peer.min.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/peerjs@1.0.0/dist/peerjs.min.js"></script>
	<script src="scripts/peerjs.min.js"></script>-->
	<script src="autosize/dist/autosize.min.js"></script>
	<script src="ace/ace.js" type="text/javascript" charset="utf-8"></script>
	<script src="ace/ext-language_tools.js"></script>
	<% if (type) { %>
		<script src="video-stream-merger/dist/video-stream-merger.js"></script>
	<% } %>	
	<link rel="stylesheet" href="css/all.css">
</head>

<body>
<% if (!type) { %>
<div class = "preload" id = "preload">
  <div class ="logo">
   <span style = "color: #3492eb;">InterviewBuddy</span>-<span style = "color: #ebae34;">Pro</span>
  </div>
   <div class = "loader-frame">
    <div class = "loader1" id = "loader1"></div>
    <div class = "loader2" id = "loader2"></div>
   </div>
  <div class ="logo" style="margin: 50px auto 50px auto;">
   Please wait while we connect you to the Interviewer....
  </div>
</div>
<div id="container" style="visibility:hidden">
<% } %>

<div id="mobv" class="col-md-12" style="visibility:hidden;position: absolute;text-align: center;background: antiquewhite;"><span style="font-size: x-large;">Please Maximize Your Window</span></div>

<% if (type) { %>
	<div id="container">
<% } %>
<!--<div style="display:flex">
	<div class="col-lg-6" style="display:inline-flex;">
		<h4 style="margin-top: 0px;margin-bottom: 0px;">Select Programming Language:</h4>
		&nbsp;
		<select id="selection" onchange="seteditor()">
			<option value="python3">Python 3.5.3</option>
			<option value="python2">Python 2.7.13</option>
			<option value="java">Java 1.8.0</option>
			<option value="c">C (gcc 6.3.0)</option>
			<option value="cpp">C++ (gcc 6.3.0)</option>
			<option value="javascript">JavaScript</option>
		</select>
	</div>
	&nbsp;
	<div class="col-lg-2">
		<h4 style="margin-top: 0px;margin-bottom: 0px;">Input:</h4>
	</div>
	&nbsp;
	<div class="col-lg-2">
		<h4 style="margin-top: 0px;margin-bottom: 0px;">Output:</h4>
	</div>
</div> -->
	<div style="display: inline-flex;width: 100%;background: #535353;">
  <div class="col-md-6">
	<div style="display:inline-flex;padding:5;width:100%;">
					<div class="col-sm-1"></div>
					<div class="col-lg-4">
						<select id="selection" class="custom-select btn btn-primary dropdown-toggle" onchange="seteditor()" style="border-radius: 15px;width:auto;border:none;color: aliceblue;">
							<option value="python3">Python 3.5.3</option>
							<option value="python2">Python 2.7.13</option>
							<option value="java">Java 1.8.0</option>
							<option value="c">C (gcc 6.3.0)</option>
							<option value="cpp">C++ (gcc 6.3.0)</option>
							<option value="javascript">JavaScript</option>
							<option value="mysql">Mysql</option>
							<option value="R">R</option>
							<option value="Ruby">Ruby</option>
							<option value="C#">C#</option>
						</select>
					</div>
					<div class="col-sm-1" style="align-self: center;">
						<!--<button type="button" class="collapsible">Open Collapsible</button>
						<div class="content" style="position:absolute;z-index:2000">
							<textarea id="input" placeholder="Inputs Here..."></textarea>
						</div>-->
						<a href="" data-toggle="button" aria-expanded="false"><i class="fa fa-share-square fa-2x collapsible" title="Input"></i></a>
						<div class="content" id="content" style="position:absolute;z-index:2000">
							<textarea id="input" placeholder="Inputs Here..."></textarea>
						</div>
						<!--<div style="align: center;" class="dropdown">
							<a href="" data-toggle="dropdown" aria-expanded="false"><i class="fa fa-sign-in fa-2x"></i></a>
							<div class="dropdown-menu" style="">
								<a href="#" class="dropdown-item"><textarea id="input" placeholder="Inputs Here..."></textarea></a>
							</div>
						</div>-->
					</div>
					<div class="col-sm-2" align="right">
						<button id="exec" type="button" class="btn btn-primary" onclick="submit()" style="border-radius: 15px;"><i class="fa fa-chevron-right"></i> Run</button>
					</div>
				</div>
		</div>
		<% if (type) { %>
			<div style="display:inline-flex;padding:5;width:100%;justify-content: flex-end;">
					<div style="display: flex;align-items: center;padding-right: 15px;">
						<p style="display: contents;justify-content: center;font-weight: bold;color: antiquewhite;" id="showrecd">Recording..</p>
					</div>
					<div style="padding-right: 70px;align-self: center;">
						<button id="recButton" class="pop_rec"></button>
					</div>
					<div style="padding-right:10">
						<button id="exec" type="button" class="btn btn-info" onclick="hide_logs()" style="border-radius: 15px;">Logs</button>
					</div>
					<div>
						<button id="exec" type="button" class="btn btn-danger" onclick="download();" style="border-radius: 15px;">End Test</button>
					</div>
				
			</div>
		<% } %>
	</div>
	<div style="display:flex;background:dimgrey;">
		<div style="background: dimgrey;">
			<nav class="navbar fixed-left navbar-light" style=""></nav>
			<nav class="navbar fixed-left navbar-light" style="background: #535353;padding:10;">
				<a class="navbar-brand" href="#"><i class="fa fa-code fa-lg"></i></a>
			</nav>
		</div>
		<div class="panel-left" style="height: 100vh;background: #535353;padding-left:5px;padding-right:0px;">
			<div id="editor" class="panel-top"></div>
			<div class="splitter-horizontal"></div>
			<textarea readonly id="output" placeholder="Output Here.." class="panel-bottom"></textarea>
		</div>
		<div class="splitter"></div>
		<div class="panel-right" style="background:#272822;">
			<div class="row" style="height:35vh;margin-right:0px;margin-left:0px;justify-content:flex-end;padding:10">
						<div style="display: flex;align-items: flex-end;">
							<i class="fa fa-expand fa-lg" style="color: black;background: white;padding: 7px;cursor: pointer;"></i>
						</div>
						<div style="position:relative;">
							<!-- 
								Display video of the current user
								Note: mute your own video, otherwise you'll hear yourself ...
							-->
							<!--<div class="text-center">-->
								<video id="peer-camera" height="100%" width="300" autoplay="autoplay" class="center-block" style="object-position:left;object-fit:fill;border:ridge;"></video>
								<!--<span class="label label-info">You</span>-->
							<!--</div>-->
							<div style="position:absolute;width: 30%;height: 30%;bottom: 0;right: 0;justify-content: flex-end;display: flex;">
								<!-- Display video of the connected peer -->
								<!--<div class="text-center">-->
								<video id="my-camera" height="100%" autoplay="autoplay" class="center-block" muted="true" style="object-position:left;object-fit:fill;border:ridge;width:100%"></video>
								<!--<span class="label label-info" id="connected_peer"></span>-->
								<!--</div>-->
							</div>
						</div>
			</div>
			<div class="row" style="height:65vh;margin-right:0px;margin-left:0px;">
				<div class="col-sm-4">
					<div id="mydiv1" class="mydiv1">
						<div style="display:flex">
							<div id="mydiv1header" class="col-sm-10">Problems</div>
								<div id="mydiv2header" class="col-sm-2">
									<div class="options-right" style="display:flex;justify-content:flex-end;padding-right:15px;">
										<i class="fa fa-window-minimize hide-chat-box1"></i>
									</div>	
								</div>
						</div>
						<% if (type) { %>
							<textarea class="resize_op" id="resize_op" oninput="res_po()"></textarea>
						<% } %>
						<% if (!type) { %>
							<textarea class="resize_op" id="resize_op" disabled></textarea>
						<% } %>
					</div>
					<% if (type) { %>
						<div id="mydiv3" class="mydiv3" style="top: 34px; left: 28px;visibility:hidden;">
							<div style="display:flex">
								<div id="mydiv3header" class="col-sm-10">Logger</div>
									<div id="mydiv4header" class="col-sm-2">
										<div class="options-right" style="display:flex;justify-content:flex-end;padding-top:5px">
											<i class="fa fa-times fa-lg hide-chat-box2"></i>
										</div>	
									</div>
							</div>
								<textarea class="resize_op" id="resize_op1" disabled></textarea>
						</div>
					<% } %>
					<div style="display:flex;bottom: 5;position: fixed;visibility:hidden;" id="prob_h">
							<div id="mydiv1header1" class="col-sm-10">Problems</div>
								<div id="mydiv2header1" class="col-sm-2">
									<div class="options-right" style="display:flex;justify-content:flex-end;padding-right:15px;">
										<i class="fa fa-window-maximize hide-chat-box1"></i>
									</div>	
								</div>
					</div>
				</div>
				<div class="col-sm-8">
				<div class="chat-main">
                <div class="col-md-12 chat-header">
                    <div class="row header-one text-white p-1">
                        <div class="col-md-6 name pl-2">
                            <i class="fa fa-comment"></i>
                            <h6 class="ml-1 mb-0">Interviewer</h6>
                        </div>
                        <div class="col-md-6 options text-right pr-0">
                            <i class="fa fa-window-minimize hide-chat-box hover text-center pt-1"></i>
                        </div>
                    </div>
                </div>
                <div class="chat-content">
                    <div class="col-md-12 chats pt-3 pl-2 pr-3 pb-3">
                        <ul class="p-0" id="msg-app">
							<li class="receive-msg float-left mb-2" id="typing_b" style="align-items: flex-end;display:flex;">
								<div class="sender-img">
									<img src="boy.png" class="float-left">
								</div>
								&nbsp;&nbsp;&nbsp;
								<div class="float-left ml-2">
									<div class="dot-pulse"></div>
								</div>
							</li>
                        </ul>
                    </div>
                    <div class="col-md-12 p-1 msg-box" style="background:white">
                        <div style="display:flex;justify-content: center;align-items: center;">
							
                            <div class="col-md-10" style="padding:0;display:flex;">
								<textarea id="w3mission" class="border-0" placeholder=" Send message" style="height:inherit;width:inherit;resize:none;max-height: 75px;" rows="2"></textarea>
                                <!--<input type="text" class="border-0" placeholder=" Send message" />-->
                            </div>
                            <div class="col-md-2 text-right options-right">
								<i class="fa fa-paper-plane mr-2 send-opp"></i>
                            </div>
                        </div>
                    </div>
                </div>
				</div>
				</div>
				</div>
			</div>
			<!--<textarea id="input" class="col-lg-2" placeholder="Inputs Here..."></textarea>
			
			<div style="display:flex;width: 100%;">
				<div class="col-sm-6" align="right">
					<button id="exec" type="button" onclick="submit()">Execute</button>
				</div>
				<div class="col-sm-6" style="display: flex">
					<h4 style="margin-top: 0px;margin-bottom: 0px;">Status:</h4>
					&nbsp;
					<h4 style="margin-top: 0px;margin-bottom: 0px;" id="status"></h4>
				</div> -->
		</div>
	</div>
</div>

<script>
	var state1=true;
	var statei=true;
	$('.hide-chat-box').click(function(){
		if(state1){
			document.getElementsByClassName('hide-chat-box')[0].classList.value="fa fa-window-maximize hide-chat-box hover text-center pt-1";
			state1=false;
		}
		else{
			document.getElementsByClassName('hide-chat-box')[0].classList.value="fa fa-window-minimize hide-chat-box hover text-center pt-1";
			state1=true;
		}
		$('.chat-content').slideToggle(100);
	});
	
	$('.hide-chat-box1').click(function(){
		if(statei){
			document.getElementById("mydiv1").style.visibility="hidden";
			document.getElementById("prob_h").style.visibility="visible";
			statei=false;
		}
		else{
			document.getElementById("mydiv1").style.visibility="visible";
			document.getElementById("prob_h").style.visibility="hidden";
			statei=true;
		}
	});
	$('.hide-chat-box2').click(function(){
		document.getElementById("mydiv3").style.visibility="hidden";
	});
	/*var parameters = location.search.substring(1).split("&");
	var peer;
	var conn;
	var l,p;
	//var conn = peer.connect('dinesh21', {host: 'localhost', port: 3000, path: '/api'});
	if(parameters[0]){
		var temp = parameters[0].split("=");
		l = unescape(temp[1]);
		temp = parameters[1].split("=");
		p = unescape(temp[1]);
		peer = new Peer(l, {host: 'localhost', port: 3000, path: '/api'});
		conn = peer.connect(p, {host: 'localhost', port: 3000, path: '/api'});
	}*/
	</script>
<script src="src/editor_create.js"></script>
<script src="src/compile_select.js"></script>
<script src="src/save_log.js"></script>
<script>
		
<% if (type) { %>
		function save_problem(xyz){
			var xhr = new XMLHttpRequest();
			xhr.open("POST", "save_problem", true);
			xhr.setRequestHeader('Content-Type', 'application/json');
			xhr.onload = function() {
				console.log(this.responseText);
			}
			xhr.send(JSON.stringify({message : xyz}));
		}
		
		function time_start(){
			var xhr = new XMLHttpRequest();
			xhr.open("POST", "time_track", true);
			xhr.setRequestHeader('Content-Type', 'application/json');
			xhr.onload = function() {
				console.log(this.responseText);
			}
			xhr.send(JSON.stringify({}));
		}
		
		function time_end(){
			var xhr = new XMLHttpRequest();
			xhr.open("POST", "time_track_end", true);
			xhr.setRequestHeader('Content-Type', 'application/json');
			xhr.onload = function() {
				console.log(this.responseText);
			}
			xhr.send(JSON.stringify({}));
		}
		
		function save_video(xyz){
			var blob = new Blob(xyz, {
				type: 'video/webm'
			});

			var fd = new FormData();
			fd.append('upl', blob);
			var url = URL.createObjectURL(blob);
			var a = document.createElement('a');
			document.body.appendChild(a);
			a.style = 'display: none';
			a.href = url;
			a.download = 'test.webm';
			a.click();
			window.URL.revokeObjectURL(url);
			/*var xhr = new XMLHttpRequest();
			xhr.open("POST", "save_video", true);
			xhr.setRequestHeader('Content-type','application/x-www-form-urlencoded');
			xhr.onload = function() {
				console.log(this.responseText);
			}
			console.log(xyz);
			xhr.send(JSON.stringify({videoChunk : xyz}));*/
			fetch('/save_video',
			{
				method: 'post',
				body: fd
			}); 
		}
	<% } %>
</script>
<script>
	
	/*
	ep.on("change", function(e){
		conn = peer.connect(p, {host: 'localhost', port: 3000, path: '/api'});
		conn.send(e);
		temp=e;
		console.log(e);
	});
	peer.on('connection', (conn) => {
		conn.on('data', (data) => {
			ep.gotoLine(data.start.row+1, data.start.column, 1);
		if(data.action=="insert")
			ep.insert(data.lines.join("\n"));
		else if(data.action=="remove")
			ep.remove({start:temp.start,end:temp.end});
		// Will print 'hi!'
		console.log(data);
		});
	});
	ep.on("changeMode", function(e){
		console.log(e);
	});
	ep.on("changeFrontMarker", function(e){
		
	})

	/*str=ep.getSession().getValue();
	ep.getSession().on('change', function () {
			str=ep.getSession().getValue(); 
			});*/
	/*ep.commands.on("exec", function(e) { 
		var rowCol = ep.selection.getCursor();
		if (rowCol.row == 1) {
				console.log("new",e);
				e.preventDefault();
				e.stopPropagation();
				ep.insert("\n");
			}
	});*/
</script>
<script>
//autosize(document.getElementById("w3mission"));
		var yup=true;
		var yup1=true;
		var xmas;
		var fan;
		var urt=true;
		var marker;
		var interviewer;
		var user_text;
		var parameters = location.search.substring(1).split("&");
        var conn;
		var call;
		var interviewer;
		var ptype = <%- type %>;
		var Range = ace.require('ace/range').Range;
		var mark_row;
		var mark_col;
		<% if (type) { %>
		var merger;
		var mediaRecorder;
		var recordedChunks = [];
		<% } %>
		l = "<%- sender %>";
		p = "<%- reciever %>";
		if(<%- type %>){
			interviewer=true;
			user_text="Candidate: ";
		}
		else
			user_text="Interviewer: ";
			
		function save_SourceCode(){
			var xhr = new XMLHttpRequest();
			xhr.open("POST", "save_SourceCode", true);
			xhr.setRequestHeader('Content-Type', 'application/json');
			xhr.onload = function() {
				console.log(this.responseText);
			}
			if(marker)
				xhr.send(JSON.stringify({message : ep.getSession().getValue(), time : moment().format(), cur_c : ep.getCursorPosition(), cur_i : {row : mark_row, col : mark_col}, lang_id : ep.getSession().getMode().$id}));
			else
				xhr.send(JSON.stringify({message : ep.getSession().getValue(), time : moment().format(), cur_c : ep.getCursorPosition(), cur_i : {row : 0, col : 0}, lang_id : ep.getSession().getMode().$id}));
		}
		/*var sock_client = io.connect('https://enbiocrypts.nl');
		sock_client.on('connect', function() {
			console.log(`sock_client connect`);
		});*/
		//var peer = new Peer(l,{host:'localhost',path:'/api', port:443})
		var peer = new Peer(l,{host: 'ebc-tests.herokuapp.com', port: 443, path: '/api',secure:true});
		//var peer = new Peer(l,{host: 'enbiocrypts.nl', port: 443, path: '/api'});
		var c = peer.connect(p);
        peer.on('open', function (id) {
            //$('#pid').text(id);
			console.log(id);
        });
        peer.on('connection', connect);
        //CONNECT
        function connect(c) {
            conn = c;
            console.log('in connect', conn.peer);
		
			<% if (!type) { %>
				jtime=moment().format()
				save_log(jtime+">>"+user_text+"I'm Online..",jtime,1);
				Notify(user_text+"I'm Online..", null, null, "success");
			<% } %>
			call = peer.call(conn.peer, window.localStream);
			call.on('stream', function (stream) {
				console.log("Connected Video Stream")
				window.peer_stream = stream;
				onReceiveStream(stream, 'peer-camera');
			<% if (type) { %>
			 if(urt){
				urt=false;
				merger = new VideoStreamMerger();
				merger.addStream(window.peer_stream, {
					x: 0, // position of the topleft corner
					y: 0,
					width: merger.width,
					height: merger.height,
					mute: false // we don't want sound from the screen (if there is any)
				});

				// Add the webcam stream. Position it on the bottom left and resize it to 100x100.
				merger.addStream(window.localStream, {
					x: 0,
					y: merger.height - 100,
					width: 100,
					height: 100,
					mute: false
				});

				// Start the merging. Calling this makes the result available to us
				merger.start();
				window.merger_video = merger.result;
				let options = {mimeType: 'video/webm;codecs=vp9'};
				if (!MediaRecorder.isTypeSupported(options.mimeType)) {
					console.error(`${options.mimeType} is not Supported`);
					options = {mimeType: 'video/webm;codecs=vp8'};
				if (!MediaRecorder.isTypeSupported(options.mimeType)) {
					console.error(`${options.mimeType} is not Supported`);
					options = {mimeType: 'video/webm'};
				if (!MediaRecorder.isTypeSupported(options.mimeType)) {
					console.error(`${options.mimeType} is not Supported`);
					options = {mimeType: ''};
						}
					}
				}
				
				try {
					mediaRecorder = new MediaRecorder(window.merger_video, options);
				} catch (e) {
					console.error('Exception while creating MediaRecorder:', e);
					return;
				}
				mediaRecorder.ondataavailable = handleDataAvailable;
				mediaRecorder.start(1000);
				time_start();
				Notify(user_text+"I'm Online..", null, null, "success");
				jtime=moment().format()
				save_log(jtime+">>"+user_text+"I'm Online..",jtime,1);
				document.getElementById("resize_op1").value=document.getElementById("resize_op1").value+moment().format()+">>"+user_text+"I'm Online.."+"\n"
			 }
			<% } %>
				//onReceiveStream(merger.result, 'merge-camera');
			});
			function handleDataAvailable(event) {
				//console.log('handleDataAvailable', event);
					if (event.data && event.data.size > 0)
						recordedChunks.push(event.data);
			}
            //$('#rid').val(conn.peer);
            //$('#rid').prop('disabled', true);
            //$('#progbar').width('100%');
            //document.getElementById('status').innerText = "Connected";
            conn.on('data', function (data) {
				if(data.action=="message_s"){
					document.getElementById("typing_b").style.visibility="hidden";
					var x=document.createElement("li");
					x.setAttribute("class","receive-msg float-left mb-2");
					x.setAttribute("style","display:flex;white-space: normal;word-break: break-word;");
					var d1=document.createElement("div");
					d1.setAttribute("class","sender-img");
					var img=document.createElement("img");
					img.setAttribute("src","boy.png");
					img.setAttribute("class","float-left");
					d1.appendChild(img);
					var d2=document.createElement("div");
					d2.setAttribute("class","receive-msg-desc float-left ml-2");
					var y=document.createElement("p");
					y.setAttribute("class","bg-white m-0 pt-1 pb-1 pl-2 pr-2 rounded");
					y.innerHTML=data.message;
					d2.appendChild(y);
					x.appendChild(d1);
					x.append(d2);
					document.getElementById("msg-app").insertBefore(x,document.getElementById("msg-app").childNodes[document.getElementById("msg-app").childNodes.length-2]);
					//document.getElementById("msg-app").appendChild(x);
				}
				else if(data.action=="typing_l"){
						if(xmas)
							clearTimeout(xmas);
						document.getElementById("typing_b").style.visibility="visible";
						xmas=setTimeout(function() {
							document.getElementById("typing_b").style.visibility="hidden";
						}, 2000);	
				}
			<% if (!type) { %>
				else if(data.action=="recieve_prob"){
					document.getElementById("resize_op").value=data.message;
				}
			<% } %>
				else if(data.action=="alert_log"){
					jtime=moment().format()
					<% if (type) { %>
						document.getElementById("resize_op1").value=document.getElementById("resize_op1").value+jtime+">>"+user_text+data.message+"\n"
					<% } %>
					if(data.message == "Cursor away from Window")
						save_log(jtime+">>"+user_text+data.message,jtime,3);
					else if(data.message == "On another tab")
						save_log(jtime+">>"+user_text+data.message,jtime,4);
					else if(data.message == "Returned to Current Tab")
						save_log(jtime+">>"+user_text+data.message,jtime,5);
					else if(data.message == "Cursor on the Window")
						save_log(jtime+">>"+user_text+data.message,jtime,6);
					Notify(user_text+data.message, null, null, data.type);
				}
				else{
					yup=false
					if(marker)
						ep.session.removeMarker(marker);
					m=ep.getCursorPosition();
					//ep.gotoLine(data.start.row+1, data.start.column, 1);
					if(data.action=="insert"){
						ep.session.insert(data.start,data.lines.join("\n"));
						ep.gotoLine(m.row+1, m.column, 1);
						mark_row = data.end.row;
						mark_col = data.end.column;
						marker=ep.session.addMarker(new Range(data.end.row,data.end.column,data.end.row), "MyCursorClass", "line", true);
						//ep.insert(data.lines.join("\n"));
					}
					else if(data.action=="remove"){
						ep.session.remove({start:data.start,end:data.end});
						ep.gotoLine(m.row+1, m.column, 1);
						mark_row = data.start.row;
						mark_col = data.start.column;
						marker=ep.session.addMarker(new Range(data.start.row,data.start.column,data.start.row), "MyCursorClass", "line", true);
					}
					else if(data.action=="move"){
						mark_row = data.start.row;
						mark_col = data.start.column;
						marker=ep.session.addMarker(new Range(data.start.row,data.start.column,data.start.row), "MyCursorClass", "line", true);
					}
					
					//else if(data.action=="move")
					//	ep.session.addMarker(new Range(data.mouse.row,data.mouse.column), "warning", "line", true);
						// Will print 'hi!'
					/*if(yup1){
						console.log(data);
						p=ep.getCursorPosition();
						console.log(p);
						marker=ep.session.addMarker(new Range(p.row,p.column,p.row), "MyCursorClass", "line", true);
						ep.gotoLine(m.row+1, m.column, 1);
					}
					yup1=true;*/
					/*var interval = setInterval(function(){
					console.log(document.getElementsByClassName("ace_start")[0].parentElement.childNodes.length);
						if(document.getElementsByClassName("ace_start")[0]){
							if(document.getElementsByClassName("ace_start")[0].parentElement.childNodes.length>1)
								document.getElementsByClassName("ace_start")[0].parentElement.removeChild(document.getElementsByClassName("ace_start")[0].parentElement.childNodes[1])	
							}
						},1);*/
					yup=true
				}
				console.log(data);
                //$('#inputText').val($('#inputText').val() + data);
            });
			conn.on('disconnected',function(){
				console.log("Candidate left");
			});
			conn.on('close',function(){
				jtime = moment().format()
				<% if (type) { %>
					document.getElementById("resize_op1").value=document.getElementById("resize_op1").value+jtime+">>"+user_text+"I'm Disconnected.."+"\n"
					Notify(user_text+"I'm Disconnected..", null, null, "danger");
				<% } else { %>
					Notify(user_text+"I'm Disconnected..", null, null, "danger");
				<% } %>
				save_log(jtime+">>"+user_text+"I'm Disconnected..",jtime,2);
				console.log("Candidate closed");
			});
        }
		
		peer.on('disconnected',function(){
			var interval = setInterval(function(){
				if(peer.open==true || peer.destroyed==true)
					clearInterval(interval);
				else{
						peer.reconnect();
					}
				},4000)
		});
		
		ep.on("changeSelection", function(e){
			console.log(e);
			if(yup){
				conn.send({action:"move",start : ep.getCursorPosition()});
				save_SourceCode();
				console.log({mouse : ep.getCursorPosition()});
			}
		});
        ep.on("change", function(e){
			if(yup){
            console.log(e);
			fan=e;
			if(e.action=="remove"){
				if(marker){
					if(ep.multiSelect.session.$frontMarkers[marker].range.start.row>e.start.row){
						ep.session.removeMarker(marker);
						marker=ep.session.addMarker(new Range(e.start.row,e.start.column,e.start.row), "MyCursorClass", "line", true);
					}
					else if((ep.multiSelect.session.$frontMarkers[marker].range.start.row==e.start.row)&&(ep.multiSelect.session.$frontMarkers[marker].range.start.column>e.start.column)){
						ep.session.removeMarker(marker);
						marker=ep.session.addMarker(new Range(e.start.row,e.start.column,e.start.row), "MyCursorClass", "line", true);
					}
				}
			}
			save_SourceCode();
            conn.send(e);
			}
        });
		/*
		ep.on("paste", function(e){
			e.text="";
			console.log(e);
		});*/
		ep.on("copy", function(e){
			console.log(e);
			e.text="";
		});
		
        c.on('open', function () {
			interviewer=false;
            console.log(c);
            connect(c);
        });

		 $(".panel-top").resizable({
			handleSelector: ".splitter-horizontal",
			resizeWidth: false,
			onDragStart: function () {
				ep.resize();
			},
			onDragEnd: function () {
				ep.resize();
			}
		});
		$(".panel-bottom").resizable({
			handleSelector: ".splitter-horizontal",
			resizeWidth: false,
			resizeHeightFrom : 'top',
			onDragStart: function () {
				ep.resize();
			},
			onDragEnd: function () {
				ep.resize();
			}
		});
		$(".panel-left").resizable({
			handleSelector: ".splitter",
			resizeHeight: false,
			onDragStart: function () {
				ep.resize();
			},
			onDragEnd: function () {
				ep.resize();
			}
		});
		$('.send-opp').click(function(){
			var tes1=document.getElementById("w3mission").value.split('\n').join('<br>');
			document.getElementById("w3mission").value="";
			save_chat(tes1);
			conn.send({action:"message_s",message:tes1});
			var x=document.createElement("li");
			x.setAttribute("class","send-msg float-right mb-2");
			x.setAttribute("style","display:flex;white-space: normal;word-break: break-word;");
			var y=document.createElement("p");
			y.setAttribute("class","pt-1 pb-1 pl-2 pr-2 m-0 rounded");
			//y.innerHTML.split('\n').join("</br>");
			y.innerHTML=tes1;
			x.appendChild(y);
			document.getElementById("msg-app").insertBefore(x,document.getElementById("msg-app").childNodes[document.getElementById("msg-app").childNodes.length-2]);
			//document.getElementById("msg-app").appendChild(x);
		});
	function typing(){
		//console.log("typing");
		conn.send({action:"typing_l"});
	};
	
	$("#w3mission").keypress(function(e) {
		typing();
		if(e.which == 13 && e.shiftKey) {
			
		}
		else if (e.which == 13) {
			e.preventDefault(); //Stops enter from creating a new line

			$('.send-opp').click(); //or ajax submit
		}
	});
	
	<% if (type) { %>
		function res_po(){
			var tes1=document.getElementById("resize_op").value;
			save_problem(tes1);
			conn.send({action:"recieve_prob",message:tes1});
		}
	
	function download() {
		conn.close();
		time_end();
		mediaRecorder.stop();
		save_video(recordedChunks);
	}
	
	<% } %>
</script>
<script src="src/div_drag.js"></script>
<script>
<% if (type) { %>
	dragElement(document.getElementById("mydiv3"));
<% } %>
</script>
<% if (!type) { %>
<script type="text/javascript" src="src/preloader.js"></script>
<% } %>
<script src="src/live_notify.js"></script>
<script src="src/video_call.js"></script>
<% if (!type) { %>
<script src="src/user_cheat.js"></script>
<% } %>

<script>
var coll = document.getElementsByClassName("collapsible");
var fr=false
  coll[0].addEventListener("click", function() {
    var content = document.getElementsByClassName("content")[0];
		if (content.style.display === "block") {
			content.style.display = "none";
		} else {
			content.style.display = "block";
			$('#input').focus();
		}
	console.log("click ");
  });
</script>
<script>
$('#content').focusout(function(ev)
{
   $('#content').hide();
});
$('#recButton').addClass("Rec");

$('#recButton').click(function(){
	if($('#recButton').hasClass('notRec')){
		$('#recButton').removeClass("notRec");
		$('#recButton').addClass("Rec");
		if(mediaRecorder)
			mediaRecorder.resume();
		document.getElementById("showrecd").innerHTML="Recording..";
	}
	else{
		$('#recButton').removeClass("Rec");
		$('#recButton').addClass("notRec");
		if(mediaRecorder)
			mediaRecorder.pause();
		document.getElementById("showrecd").innerHTML="Record";
	}
});
</script>
<!--<script src="connection.js" type="text/javascript" charset="utf-8"></script>-->
</body>
</html>